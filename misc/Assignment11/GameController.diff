--- GameController.java	2021-10-12 17:47:48.000000000 -0400
+++ /home/neil/down/A11_Kingdom309/GameController.java	2021-10-09 20:34:40.000000000 -0400
@@ -1,6 +1,15 @@
-package picross;
+/**
+ * @author Neil Kingdom
+ * @since 2021-09-15
+ * @version 1.0
+ *
+ * GameController creates the actual gameplay screen. The screen is
+ * split into regions for both layout management and gameplay.
+ * This screen is persistent until the user decides to quit.
+ * */
+
+package Assign1.Picross;
 
-import javax.imageio.ImageIO;
 import javax.swing.*;
 import javax.swing.text.BadLocationException;
 import javax.swing.text.SimpleAttributeSet;
@@ -8,22 +17,12 @@
 import javax.swing.text.StyledDocument;
 import java.awt.*;
 import java.awt.event.*;
-import java.awt.image.BufferedImage;
+import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Random;
 
-/**
- * @author Neil Kingdom
- * @since 2021-09-15
- * @version 1.0
- *
- * GameController creates the actual gameplay screen. The screen is
- * split into regions for both layout management and gameplay.
- * This screen is persistent until the user decides to quit.
- * */
-
 public class GameController extends JFrame {
 
     private static final int MIN_WIN_WIDTH = (Toolkit.getDefaultToolkit().getScreenSize().width/3);
@@ -62,26 +61,40 @@
 
         /* ---------------------- Resource Config -------------------- */
 
-        Font mcRegular;
-        Font mcBold;
-
-        BufferedImage bufBanner;
+        final File MC_REGULAR = new File("res/fonts/MinecraftRegular.otf");
+        final File MC_BOLD = new File("res/fonts/MinecraftBold.otf");
+        final File BANNER_ICO = new File("res/img/PicrossBanner.jpg");
         ImageIcon bannerIcon = null;
 
-        try {
-            bufBanner = ImageIO.read(this.getClass().getResourceAsStream("/res/img/PicrossBanner.jpg"));
-            bannerIcon = new ImageIcon(bufBanner.getScaledInstance(150, 25, Image.SCALE_SMOOTH));
-        } catch (IOException | IllegalArgumentException e) {
-            System.err.println("Could not load image: \"/res/img/PicrossBanner.jpg\"");
+        // Custom exception
+        class MissingIconFile extends Exception {
+            MissingIconFile(String e) {
+                super(e);
+            }
+        }
+
+        if(!BANNER_ICO.exists()) {
+            /* TODO: Really sloppy bad code. Fix in later revision. Maybe use FileInputStream */
+            try {
+                throw new MissingIconFile("Picross was unable to locate " + BANNER_ICO.getPath());
+            } catch (MissingIconFile e) {
+                e.printStackTrace();
+                dispose();
+                System.exit(-1);
+            }
+        }
+        else {
+            bannerIcon = new ImageIcon(new ImageIcon(BANNER_ICO.getPath()).getImage().getScaledInstance(150, 25, Image.SCALE_SMOOTH));
         }
 
         try {
-            mcRegular = Font.createFont(Font.TRUETYPE_FONT, this.getClass().getResourceAsStream("/res/fonts/MinecraftRegular.otf")).deriveFont(Font.PLAIN, 16);
-            mcBold = Font.createFont(Font.TRUETYPE_FONT, this.getClass().getResourceAsStream("/res/fonts/MinecraftBold.otf")).deriveFont(Font.BOLD, 16);
-            setFont(mcRegular);
-        } catch (IOException | FontFormatException | IllegalArgumentException e) {
-            // Only using MinecraftRegular.otf for now
-            System.err.println("Could not load font: \"/res/fonts/MinecraftRegular.otf\"");
+            final Font f_MC_REGULAR = Font.createFont(Font.TRUETYPE_FONT, MC_REGULAR);
+            final Font f_MC_BOLD = Font.createFont(Font.TRUETYPE_FONT, MC_BOLD);
+            setFont(f_MC_REGULAR.deriveFont(Font.PLAIN, 16));
+        } catch(FontFormatException | IOException e) {
+            System.err.println("Picross was unable to locate " + MC_REGULAR.getPath());
+            dispose();
+            System.exit(-1);
         }
 
         /* ---------------------- Init JPanels -------------------- */
@@ -266,11 +279,7 @@
         /* ---------------------- Right Panel -------------------- */
 
         // Define components for rightPanel
-        JLabel bannerLogo;
-        if(bannerIcon != null)
-             bannerLogo = new JLabel(bannerIcon);
-        else
-            bannerLogo = new JLabel("Missing Image");
+        JLabel bannerLogo = new JLabel(bannerIcon);
 
         JLabel pointsLabel = new JLabel("Points: ");
         pointsLabel.setForeground(super.getForeground());
